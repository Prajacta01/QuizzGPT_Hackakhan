{"ast":null,"code":"var _jsxFileName = \"/Users/prajacta/Desktop/hackakhan/flashcards_website/src/App.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [inputText, setInputText] = useState('');\n  const [outputText, setOutputText] = useState('');\n  const [questionAnswerText, setQuestionAnswerText] = useState('');\n  const [cardsList, setCardsList] = useState(null);\n  const [cards, setCards] = useState(cardsList);\n  const apiKey = '';\n  const model = 'text-davinci-003';\n\n  // credit to flashcard code from https://nabendu82.medium.com/build-a-flashcard-quiz-with-react-c1cb96e3a1e8 by Nabendu Biswas\n  const FlashcardList = _ref => {\n    let {\n      flashcards\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: flashcards.map(flashcard => {\n        return /*#__PURE__*/_jsxDEV(Flashcard, {\n          flashcard: flashcard\n        }, flashcard.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  };\n  const Flashcard = _ref2 => {\n    _s();\n    let {\n      flashcard\n    } = _ref2;\n    const [flip, setFlip] = useState(false);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card ${flip ? 'flip' : \"\"}`,\n      onClick: () => {\n        setFlip(!flip);\n        console.log(flip, \"aaaaaaaaa\");\n      },\n      children: flip ? flashcard.answer : flashcard.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  };\n  _s(Flashcard, \"VEQqzcgmRpvpSkLfq3URr/rX57U=\");\n  const handleInputChange = e => {\n    setInputText(e.target.value);\n  };\n  const askChatGpt = async prompt => {\n    console.log(prompt);\n    try {\n      const response = await fetch('https://api.openai.com/v1/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          prompt,\n          model,\n          max_tokens: 1000\n        })\n      });\n      const data = await response.json();\n      console.log(data, 'bark');\n      return data.choices[0].text;\n    } catch (error) {\n      console.log('Error', error);\n    }\n    return null;\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    let newinput = \"'\" + inputText + \"' break this down into question and answers\";\n    let questionAnswerOutput = await askChatGpt(newinput);\n    console.log(questionAnswerOutput);\n    setQuestionAnswerText(questionAnswerOutput);\n    let text = questionAnswerOutput;\n    let cardsText = text.split('Q: ');\n    let cardsInfo = [];\n    let counter = 0;\n    cardsText.forEach(cardText => {\n      let cardInfo = {\n        id: counter,\n        question: cardText.split('A: ')[0],\n        answer: cardText.split('A: ')[1]\n      };\n      counter += 1;\n      cardsInfo.push(cardInfo);\n    });\n    setCardsList(cardsInfo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputText,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), cardsList && /*#__PURE__*/_jsxDEV(FlashcardList, {\n      flashcards: cardsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }, this)\n    //     <ul>\n    //       {cardsList.map((card) => [\n    //         <div key={card.id}>\n\n    //           <p>{card.question}</p>\n    //           <p> answer: {card.answer}</p>\n    //         </div>\n    //       ])}\n    //     </ul>\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"mn4H6GUlEQPMrEvx4XQk5PvQwfw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","logo","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","inputText","setInputText","outputText","setOutputText","questionAnswerText","setQuestionAnswerText","cardsList","setCardsList","cards","setCards","apiKey","model","FlashcardList","_ref","flashcards","className","children","map","flashcard","Flashcard","id","fileName","_jsxFileName","lineNumber","columnNumber","_ref2","flip","setFlip","onClick","console","log","answer","question","handleInputChange","e","target","value","askChatGpt","prompt","response","fetch","method","headers","body","JSON","stringify","max_tokens","data","json","choices","text","error","handleFormSubmit","preventDefault","newinput","questionAnswerOutput","cardsText","split","cardsInfo","counter","forEach","cardText","cardInfo","push","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/Users/prajacta/Desktop/hackakhan/flashcards_website/src/App.js"],"sourcesContent":["import React, {useState} from 'react'\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const [inputText, setInputText] = useState('')\n  const [outputText, setOutputText] = useState('')\n  const [questionAnswerText, setQuestionAnswerText] = useState('')\n  const [cardsList, setCardsList] = useState(null)\n  const [cards, setCards] = useState(cardsList)\n\n  const apiKey = ''\n  const model = 'text-davinci-003'\n\n// credit to flashcard code from https://nabendu82.medium.com/build-a-flashcard-quiz-with-react-c1cb96e3a1e8 by Nabendu Biswas\n  const FlashcardList = ({flashcards}) => {\n    return (\n      <div className=\"card-grid\">\n        {flashcards.map(flashcard => {\n          return <Flashcard flashcard={flashcard} key={flashcard.id}/>\n        })}\n      </div>\n    )\n  }\n\n  const Flashcard = ({flashcard}) => {\n    const [flip, setFlip] = useState(false)\n\n    return (\n      <div className={`card ${flip ? 'flip' : \"\"}`} onClick = {() => {setFlip(!flip); console.log(flip, \"aaaaaaaaa\")}}>\n\n        {flip? flashcard.answer: flashcard.question} \n        </div>\n    )\n  }\n\n\n  const handleInputChange = (e) => {\n    setInputText(e.target.value);\n  };\n\n  const askChatGpt = async (prompt) => {\n    console.log(prompt)\n\n    try {\n      const response = await fetch ('https://api.openai.com/v1/completions',{\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          prompt,\n          model,\n          max_tokens: 1000\n        })\n      });\n      const data = await response.json();\n      console.log(data, 'bark')\n\n      return data.choices[0].text\n    } catch (error) {\n      console.log('Error', error);\n    }\n    return null\n  }\n\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n\n    let newinput = \"'\" + inputText + \"' break this down into question and answers\"\n\n    let questionAnswerOutput = await askChatGpt(newinput)\n    console.log(questionAnswerOutput)\n\n    setQuestionAnswerText(questionAnswerOutput)\n    let text = questionAnswerOutput\n    let cardsText = text.split('Q: ')\n\n    let cardsInfo = []\n    let counter = 0\n    cardsText.forEach(cardText => {\n      let cardInfo = {\n        id: counter,\n        question: cardText.split('A: ')[0],\n        answer: cardText.split('A: ')[1]\n      }\n      counter += 1\n      cardsInfo.push(cardInfo)\n    })\n\n    setCardsList(cardsInfo)\n\n  };\n\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleFormSubmit}>\n        <input type=\"text\" value={inputText} onChange={handleInputChange} />\n        <button type=\"submit\">Send</button>\n      </form>\n      <br/>\n      {cardsList && <FlashcardList flashcards={cardsList}/>\n    //     <ul>\n    //       {cardsList.map((card) => [\n    //         <div key={card.id}>\n              \n    //           <p>{card.question}</p>\n    //           <p> answer: {card.answer}</p>\n    //         </div>\n    //       ])}\n    //     </ul>\n            }\n      </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}