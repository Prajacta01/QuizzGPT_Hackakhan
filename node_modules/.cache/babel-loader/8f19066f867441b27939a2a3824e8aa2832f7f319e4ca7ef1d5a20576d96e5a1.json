{"ast":null,"code":"var _jsxFileName = \"/Users/prajacta/Desktop/hackakhan/flashcards_website/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [outputText, setOutputText] = useState('');\n  const [questionAnswerText, setQuestionAnswerText] = useState('');\n  const [cardsList, setCardsList] = useState(null);\n  const apiKey = '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';\n  const model = 'text-davinci-003';\n  const handleInputChange = e => {\n    setInputText(e.target.value);\n  };\n  const askChatGpt = async prompt => {\n    console.log(prompt);\n    try {\n      const response = await fetch('https://api.openai.com/v1/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          prompt,\n          model,\n          max_tokens: 1000\n        })\n      });\n      const data = await response.json();\n      console.log(data, 'bark');\n      return data.choices[0].text;\n    } catch (error) {\n      console.log('Error', error);\n    }\n    return null;\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    let newinput = \"'\" + inputText + \"' break this down into question and answers\";\n    let questionAnswerOutput = await askChatGpt(newinput);\n    console.log(questionAnswerOutput);\n    setQuestionAnswerText(questionAnswerOutput);\n    let text = questionAnswerOutput;\n    let cardsText = text.split('Q: ');\n    let cardsInfo = [];\n    let counter = 0;\n    cardsText.forEach(cardText => {\n      let cardsInfo = {\n        id: counter,\n        question: cardText.split('A: ')[0],\n        answer: cardText.split('A: ')[1]\n      };\n      counter += 1;\n      cardsInfo.push(cardInfo);\n    });\n    setCardsList(cardInfo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputText,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: questionAnswerText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), cardsList && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cardsList.map(card => [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: card.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"flashcards \", card.answer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, card.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1WLcdj3QFk9ilQTBFmvzFP8RhU8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","logo","jsxDEV","_jsxDEV","App","_s","inputText","setInputText","outputText","setOutputText","questionAnswerText","setQuestionAnswerText","cardsList","setCardsList","apiKey","model","handleInputChange","e","target","value","askChatGpt","prompt","console","log","response","fetch","method","headers","body","JSON","stringify","max_tokens","data","json","choices","text","error","handleFormSubmit","preventDefault","newinput","questionAnswerOutput","cardsText","split","cardsInfo","counter","forEach","cardText","id","question","answer","push","cardInfo","className","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","card","_c","$RefreshReg$"],"sources":["/Users/prajacta/Desktop/hackakhan/flashcards_website/src/App.js"],"sourcesContent":["import React, {useState} from 'react'\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const [inputText, setInputText] = useState('')\n  const [outputText, setOutputText] = useState('')\n  const [questionAnswerText, setQuestionAnswerText] = useState('')\n  const [cardsList, setCardsList] = useState(null)\n\n  const apiKey = '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'\n  const model = 'text-davinci-003'\n\n  const handleInputChange = (e) => {\n    setInputText(e.target.value);\n  };\n\n  const askChatGpt = async (prompt) => {\n    console.log(prompt)\n\n    try {\n      const response = await fetch ('https://api.openai.com/v1/completions',{\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          prompt,\n          model,\n          max_tokens: 1000\n        })\n      });\n      const data = await response.json();\n      console.log(data, 'bark')\n\n      return data.choices[0].text\n    } catch (error) {\n      console.log('Error', error);\n    }\n    return null\n  }\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n\n    let newinput = \"'\" + inputText + \"' break this down into question and answers\"\n\n    let questionAnswerOutput = await askChatGpt(newinput)\n    console.log(questionAnswerOutput)\n\n    setQuestionAnswerText(questionAnswerOutput)\n    let text = questionAnswerOutput\n    let cardsText = text.split('Q: ')\n\n    let cardsInfo = []\n    let counter = 0\n    cardsText.forEach(cardText => {\n      let cardsInfo = {\n        id: counter,\n        question: cardText.split('A: ')[0],\n        answer: cardText.split('A: ')[1]\n      }\n      counter += 1\n      cardsInfo.push(cardInfo)\n    })\n\n    setCardsList(cardInfo)\n\n  };\n\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleFormSubmit}>\n        <input type=\"text\" value={inputText} onChange={handleInputChange} />\n        <button type=\"submit\">Send</button>\n      </form>\n      <p>{questionAnswerText}</p>\n      <br/>\n      {cardsList && <div>\n        <ul>\n          {cardsList.map((card) => [\n            <div key={card.id}>\n              <p>{card.question}</p>\n              <p>flashcards {card.answer}</p>\n            </div>\n          ])}\n        </ul>\n        </div>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}