{"ast":null,"code":"var _jsxFileName = \"/Users/prajacta/Desktop/hackakhan/flashcards_website/src/App.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [inputText, setInputText] = useState('');\n  const [outputText, setOutputText] = useState('');\n  const [questionAnswerText, setQuestionAnswerText] = useState('');\n  const [cardsList, setCardsList] = useState(null);\n  const [cards, setCards] = useState(cardsList);\n  const apiKey = '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';\n  const model = 'text-davinci-003';\n  const Flashcard = _ref => {\n    _s();\n    let {\n      flashcard\n    } = _ref;\n    //cha cha real smooth asjkcnkmmjhghhbjnkjhhvjbknnjbhhjbnhbjnhvghbjhvghbjhvhbjhbjnj\n    const [flip, setFlip] = useState(false);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card ${flip ? 'flip' : \"\"}`,\n      onClick: () => setFlip(!flip),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"front\",\n        children: [flashcard.question, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flashcard-options\",\n          children: flashcard.option.map(option => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              classname: \"flashcard-option\",\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), flip ? card.answer : flashcard.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"back\",\n        children: flashcard.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  };\n  // dxfghujighfdcfvghjkkhgfdxvcbvnbhjytrdxcbvnbhygtfg\n  _s(Flashcard, \"VEQqzcgmRpvpSkLfq3URr/rX57U=\");\n  const FlashcardList = _ref2 => {\n    let {\n      flashcards\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: flashcards.map(flashcard => {\n        return /*#__PURE__*/_jsxDEV(Flash, {\n          flashcard: flashcard\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  };\n  const handleInputChange = e => {\n    setInputText(e.target.value);\n  };\n  const askChatGpt = async prompt => {\n    console.log(prompt);\n    try {\n      const response = await fetch('https://api.openai.com/v1/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          prompt,\n          model,\n          max_tokens: 1000\n        })\n      });\n      const data = await response.json();\n      console.log(data, 'bark');\n      return data.choices[0].text;\n    } catch (error) {\n      console.log('Error', error);\n    }\n    return null;\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    let newinput = \"'\" + inputText + \"' break this down into question and answers\";\n    let questionAnswerOutput = await askChatGpt(newinput);\n    console.log(questionAnswerOutput);\n    setQuestionAnswerText(questionAnswerOutput);\n    let text = questionAnswerOutput;\n    let cardsText = text.split('Q: ');\n    let cardsInfo = [];\n    let counter = 0;\n    cardsText.forEach(cardText => {\n      let cardInfo = {\n        id: counter,\n        question: cardText.split('A: ')[0],\n        answer: cardText.split('A: ')[1]\n      };\n      counter += 1;\n      cardsInfo.push(cardInfo);\n    });\n    setCardsList(cardsInfo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputText,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: questionAnswerText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), cardsList && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cardsList.map(card => [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: card.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" answe \", card.answer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, card.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"mn4H6GUlEQPMrEvx4XQk5PvQwfw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","logo","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","inputText","setInputText","outputText","setOutputText","questionAnswerText","setQuestionAnswerText","cardsList","setCardsList","cards","setCards","apiKey","model","Flashcard","_ref","flashcard","flip","setFlip","className","onClick","children","question","option","map","classname","fileName","_jsxFileName","lineNumber","columnNumber","card","answer","FlashcardList","_ref2","flashcards","Flash","id","handleInputChange","e","target","value","askChatGpt","prompt","console","log","response","fetch","method","headers","body","JSON","stringify","max_tokens","data","json","choices","text","error","handleFormSubmit","preventDefault","newinput","questionAnswerOutput","cardsText","split","cardsInfo","counter","forEach","cardText","cardInfo","push","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/Users/prajacta/Desktop/hackakhan/flashcards_website/src/App.js"],"sourcesContent":["import React, {useState} from 'react'\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const [inputText, setInputText] = useState('')\n  const [outputText, setOutputText] = useState('')\n  const [questionAnswerText, setQuestionAnswerText] = useState('')\n  const [cardsList, setCardsList] = useState(null)\n  const [cards, setCards] = useState(cardsList)\n\n  const apiKey = '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'\n  const model = 'text-davinci-003'\n\n  const Flashcard = ({flashcard}) => {\n    //cha cha real smooth asjkcnkmmjhghhbjnkjhhvjbknnjbhhjbnhbjnhvghbjhvghbjhvhbjhbjnj\n    const [flip, setFlip] = useState(false)\n\n    return (\n      <div className={`card ${flip ? 'flip' : \"\"}`} onClick = {() => setFlip(!flip)}>\n        <div className = \"front\">\n          {flashcard.question}\n          <div className = \"flashcard-options\">\n            {flashcard.option.map(option => {\n              return <div classname = \"flashcard-option\">{option}</div>\n            })}\n          </div>\n        {flip? card.answer: flashcard.question} \n        </div>\n        <div className = \"back\">{flashcard.answer}</div>\n      </div>\n    )\n  }\n// dxfghujighfdcfvghjkkhgfdxvcbvnbhjytrdxcbvnbhygtfg\n  const FlashcardList = ({flashcards}) => {\n    return (\n      <div className=\"card-grid\">\n        {flashcards.map(flashcard => {\n          return <Flash flashcard={flashcard} key={card.id}/>\n        })}\n      </div>\n    )\n  }\n\n  const handleInputChange = (e) => {\n    setInputText(e.target.value);\n  };\n\n  const askChatGpt = async (prompt) => {\n    console.log(prompt)\n\n    try {\n      const response = await fetch ('https://api.openai.com/v1/completions',{\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          prompt,\n          model,\n          max_tokens: 1000\n        })\n      });\n      const data = await response.json();\n      console.log(data, 'bark')\n\n      return data.choices[0].text\n    } catch (error) {\n      console.log('Error', error);\n    }\n    return null\n  }\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n\n    let newinput = \"'\" + inputText + \"' break this down into question and answers\"\n\n    let questionAnswerOutput = await askChatGpt(newinput)\n    console.log(questionAnswerOutput)\n\n    setQuestionAnswerText(questionAnswerOutput)\n    let text = questionAnswerOutput\n    let cardsText = text.split('Q: ')\n\n    let cardsInfo = []\n    let counter = 0\n    cardsText.forEach(cardText => {\n      let cardInfo = {\n        id: counter,\n        question: cardText.split('A: ')[0],\n        answer: cardText.split('A: ')[1]\n      }\n      counter += 1\n      cardsInfo.push(cardInfo)\n    })\n\n    setCardsList(cardsInfo)\n\n  };\n\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleFormSubmit}>\n        <input type=\"text\" value={inputText} onChange={handleInputChange} />\n        <button type=\"submit\">Send</button>\n      </form>\n      <p>{questionAnswerText}</p>\n      <br/>\n      {cardsList && <div>\n        <ul>\n          {cardsList.map((card) => [\n            <div key={card.id}>\n              <p>{card.question}</p>\n              <p> answe {card.answer}</p>\n            </div>\n          ])}\n        </ul>\n        </div>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}